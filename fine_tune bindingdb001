{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "96c6e0bd",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-03T15:28:30.719720Z",
     "iopub.status.busy": "2025-06-03T15:28:30.719448Z",
     "iopub.status.idle": "2025-06-03T15:29:51.352610Z",
     "shell.execute_reply": "2025-06-03T15:29:51.351272Z"
    },
    "papermill": {
     "duration": 80.638933,
     "end_time": "2025-06-03T15:29:51.354464",
     "exception": false,
     "start_time": "2025-06-03T15:28:30.715531",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m29.4/29.4 MB\u001b[0m \u001b[31m59.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m35.2/35.2 MB\u001b[0m \u001b[31m53.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m1.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m30.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m84.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h"
     ]
    }
   ],
   "source": [
    "!pip install rdkit-pypi rdkit torch transformers pytorch-lightning requests matplotlib -q"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e6a6e86a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-03T15:29:51.400416Z",
     "iopub.status.busy": "2025-06-03T15:29:51.400094Z",
     "iopub.status.idle": "2025-06-03T15:30:08.535542Z",
     "shell.execute_reply": "2025-06-03T15:30:08.534928Z"
    },
    "papermill": {
     "duration": 17.159427,
     "end_time": "2025-06-03T15:30:08.536871",
     "exception": false,
     "start_time": "2025-06-03T15:29:51.377444",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:08,523 - INFO - Logging initialized\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import sys\n",
    "import gc\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from transformers import AutoTokenizer, AutoModel\n",
    "from rdkit import Chem, RDLogger, DataStructs\n",
    "from rdkit.Chem import AllChem\n",
    "import pytorch_lightning as pl\n",
    "from pytorch_lightning.callbacks import ModelCheckpoint, EarlyStopping\n",
    "from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n",
    "from scipy.stats import pearsonr\n",
    "from typing import Dict, Optional, List, Any\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import logging\n",
    "import psutil\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Suppress RDKit warnings\n",
    "RDLogger.DisableLog('rdApp.*')\n",
    "\n",
    "# Setup logging\n",
    "logging.basicConfig(\n",
    "    level=logging.INFO,\n",
    "    format=\"%(asctime)s - %(levelname)s - %(message)s\",\n",
    "    handlers=[logging.StreamHandler(sys.stdout)],\n",
    "    force=True\n",
    ")\n",
    "logger = logging.getLogger(__name__)\n",
    "logger.info(\"Logging initialized\")\n",
    "\n",
    "def seed_everything(seed: int = 42) -> None:\n",
    "    torch.manual_seed(seed)\n",
    "    np.random.seed(seed)\n",
    "    if torch.cuda.is_available():\n",
    "        torch.cuda.manual_seed_all(seed)\n",
    "seed_everything()\n",
    "\n",
    "def log_memory_usage() -> None:\n",
    "    process = psutil.Process()\n",
    "    mem_info = process.memory_info()\n",
    "    logger.info(f\"Memory usage: {mem_info.rss / 1024**2:.2f} MB\")\n",
    "\n",
    "def canonicalize_smiles(smiles: str) -> Optional[str]:\n",
    "    try:\n",
    "        mol = Chem.MolFromSmiles(smiles)\n",
    "        if mol is None:\n",
    "            return None\n",
    "        return Chem.MolToSmiles(mol, canonical=True)\n",
    "    except Exception as e:\n",
    "        logger.error(f\"SMILES canonicalization failed: {e}\")\n",
    "        return None\n",
    "\n",
    "def load_bindingdb(path: str, max_samples: int = 30000, chunksize: int = 100000) -> Optional[pd.DataFrame]:\n",
    "    logger.info(f\"Loading BindingDB from {path}\")\n",
    "    try:\n",
    "        required_cols = [\"Ligand SMILES\", \"Kd (nM)\", \"BindingDB Target Chain Sequence\"]\n",
    "        df_chunk = pd.read_csv(path, sep=\"\\t\", low_memory=False, nrows=10)\n",
    "        if not all(col in df_chunk.columns for col in required_cols):\n",
    "            logger.error(f\"Missing columns: {set(required_cols) - set(df_chunk.columns)}\")\n",
    "            return None\n",
    "        chunks = []\n",
    "        total_rows = 0\n",
    "        invalid_smiles = 0\n",
    "        for chunk in pd.read_csv(path, sep=\"\\t\", usecols=required_cols, chunksize=chunksize):\n",
    "            total_rows += len(chunk)\n",
    "            chunk = chunk.dropna()\n",
    "            chunk[\"SMILES\"] = chunk[\"Ligand SMILES\"].apply(canonicalize_smiles)\n",
    "            invalid_smiles += len(chunk) - chunk[\"SMILES\"].notna().sum()\n",
    "            chunk = chunk[chunk[\"SMILES\"].notna()]\n",
    "            chunk[\"Kd (nM)\"] = pd.to_numeric(chunk[\"Kd (nM)\"], errors=\"coerce\")\n",
    "            chunk = chunk.dropna(subset=[\"Kd (nM)\"])\n",
    "            chunk = chunk[chunk[\"Kd (nM)\"].between(0.1, 1e6)]\n",
    "            chunks.append(chunk)\n",
    "            if len(pd.concat(chunks)) >= max_samples:\n",
    "                break\n",
    "        if not chunks:\n",
    "            logger.error(\"No valid BindingDB data\")\n",
    "            return None\n",
    "        df = pd.concat(chunks).head(max_samples)\n",
    "        df[\"log_kd\"] = -np.log10(df[\"Kd (nM)\"] / 1e9)\n",
    "        df = df[df[\"log_kd\"].between(-10, 10)]\n",
    "        df = df.rename(columns={\"BindingDB Target Chain Sequence\": \"Target Sequence\"})\n",
    "        df = df.drop_duplicates(subset=[\"SMILES\"])\n",
    "        logger.info(f\"Loaded BindingDB dataset with {len(df)} samples\")\n",
    "        logger.info(f\"NaNs in log_kd: {df['log_kd'].isna().sum()}\")\n",
    "        logger.info(f\"Total rows processed: {total_rows}, Invalid SMILES: {invalid_smiles} ({invalid_smiles/total_rows*100:.2f}%)\")\n",
    "        logger.info(f\"BindingDB log_kd mean: {df['log_kd'].mean():.2f}, std: {df['log_kd'].std():.2f}\")\n",
    "        log_memory_usage()\n",
    "        return df[[\"SMILES\", \"Target Sequence\", \"log_kd\"]]\n",
    "    except Exception as e:\n",
    "        logger.error(f\"Error loading BindingDB: {e}\")\n",
    "        return None\n",
    "\n",
    "class CustomSMILESTokenizer:\n",
    "    def __init__(self, max_len: int = 128):\n",
    "        self.vocab = list(\"CcNnOoSsClBr#=()[]-+1234567890@%\\\\\")\n",
    "        self.token2id = {t: i + 1 for i, t in enumerate(self.vocab)}\n",
    "        self.max_len = max_len\n",
    "    def tokenize(self, smiles: str) -> Dict[str, torch.Tensor]:\n",
    "        tokens = [self.token2id.get(c, 0) for c in smiles if c in self.token2id]\n",
    "        tokens = tokens[:self.max_len]\n",
    "        tokens += [0] * (self.max_len - len(tokens))\n",
    "        attention_mask = [1 if t != 0 else 0 for t in tokens]\n",
    "        return {\n",
    "            \"input_ids\": torch.tensor(tokens, dtype=torch.long),\n",
    "            \"attention_mask\": torch.tensor(attention_mask, dtype=torch.long)\n",
    "        }\n",
    "\n",
    "class SMILESProteinTokenizer:\n",
    "    def __init__(self, max_len_smiles: int = 128, max_len_protein: int = 512):\n",
    "        self.max_len_smiles = max_len_smiles\n",
    "        self.max_len_protein = max_len_protein\n",
    "        try:\n",
    "            logger.info(\"Loading Hugging Face tokenizers\")\n",
    "            self.smiles_tokenizer = AutoTokenizer.from_pretrained(\"seyonec/PubChem10M_SMILES_BPE_450k\")\n",
    "            self.protein_tokenizer = AutoTokenizer.from_pretrained(\"facebook/esm2_t12_35M_UR50D\")\n",
    "            self.use_custom = False\n",
    "        except Exception as e:\n",
    "            logger.warning(f\"Failed to load SMILES tokenizer: {e}. Using custom.\")\n",
    "            self.smiles_tokenizer = CustomSMILESTokenizer(max_len_smiles)\n",
    "            self.protein_tokenizer = AutoTokenizer.from_pretrained(\"facebook/esm2_t12_35M_UR50D\")\n",
    "            self.use_custom = True\n",
    "    def tokenize(self, smiles: str, protein: str) -> Optional[Dict[str, torch.Tensor]]:\n",
    "        try:\n",
    "            if not isinstance(smiles, str) or not isinstance(protein, str):\n",
    "                logger.error(f\"Invalid input types: SMILES={type(smiles)}, Protein={type(protein)}\")\n",
    "                return None\n",
    "            if self.use_custom:\n",
    "                smiles_enc = self.smiles_tokenizer.tokenize(smiles)\n",
    "            else:\n",
    "                smiles_enc = self.smiles_tokenizer(\n",
    "                    smiles, max_length=self.max_len_smiles, padding=\"max_length\", truncation=True, return_tensors=\"pt\"\n",
    "                )\n",
    "            protein_enc = self.protein_tokenizer(\n",
    "                protein, max_length=self.max_len_protein, padding=\"max_length\", truncation=True, return_tensors=\"pt\"\n",
    "            )\n",
    "            return {\n",
    "                \"smiles_input_ids\": smiles_enc[\"input_ids\"].squeeze(),\n",
    "                \"smiles_attention_mask\": smiles_enc[\"attention_mask\"].squeeze(),\n",
    "                \"protein_input_ids\": protein_enc[\"input_ids\"].squeeze(),\n",
    "                \"protein_attention_mask\": protein_enc[\"attention_mask\"].squeeze()\n",
    "            }\n",
    "        except Exception as e:\n",
    "            logger.error(f\"Tokenization error: {e}\")\n",
    "            return None\n",
    "\n",
    "class DTIDataset(Dataset):\n",
    "    def __init__(self, df: pd.DataFrame, tokenizer: SMILESProteinTokenizer, log_kd_mean: float = 0.0, log_kd_std: float = 1.0):\n",
    "        self.df = df\n",
    "        self.tokenizer = tokenizer\n",
    "        self.log_kd_mean = log_kd_mean\n",
    "        self.log_kd_std = log_kd_std\n",
    "        self.failed_samples: List[int] = []\n",
    "        logger.info(f\"Creating dataset with {len(df)} samples\")\n",
    "    def __len__(self) -> int:\n",
    "        return len(self.df)\n",
    "    def __getitem__(self, idx: int) -> Optional[Dict[str, Any]]:\n",
    "        row = self.df.iloc[idx]\n",
    "        try:\n",
    "            smiles, protein, log_kd = row[\"SMILES\"], row[\"Target Sequence\"], row[\"log_kd\"]\n",
    "            if not isinstance(smiles, str) or not isinstance(protein, str) or not isinstance(log_kd, (int, float)):\n",
    "                self.failed_samples.append(idx)\n",
    "                return None\n",
    "            if Chem.MolFromSmiles(smiles) is None:\n",
    "                self.failed_samples.append(idx)\n",
    "                return None\n",
    "            tokens = self.tokenizer.tokenize(smiles, protein)\n",
    "            if tokens is None:\n",
    "                self.failed_samples.append(idx)\n",
    "                return None\n",
    "            normalized_log_kd = (log_kd - self.log_kd_mean) / self.log_kd_std\n",
    "            return {\n",
    "                **tokens,\n",
    "                \"log_kd\": torch.tensor(normalized_log_kd, dtype=torch.float32),\n",
    "                \"original_log_kd\": torch.tensor(log_kd, dtype=torch.float32),\n",
    "                \"smiles\": smiles,\n",
    "                \"protein\": protein\n",
    "            }\n",
    "        except Exception as e:\n",
    "            self.failed_samples.append(idx)\n",
    "            return None\n",
    "\n",
    "def collate_fn(batch: List[Optional[Dict]]) -> Optional[Dict[str, Any]]:\n",
    "    batch = [b for b in batch if b is not None]\n",
    "    if not batch:\n",
    "        return None\n",
    "    return {\n",
    "        \"smiles_input_ids\": torch.stack([b[\"smiles_input_ids\"] for b in batch]),\n",
    "        \"smiles_attention_mask\": torch.stack([b[\"smiles_attention_mask\"] for b in batch]),\n",
    "        \"protein_input_ids\": torch.stack([b[\"protein_input_ids\"] for b in batch]),\n",
    "        \"protein_attention_mask\": torch.stack([b[\"protein_attention_mask\"] for b in batch]),\n",
    "        \"log_kd\": torch.stack([b[\"log_kd\"] for b in batch]),\n",
    "        \"original_log_kd\": torch.stack([b[\"original_log_kd\"] for b in batch]),\n",
    "        \"smiles\": [b[\"smiles\"] for b in batch],\n",
    "        \"protein\": [b[\"protein\"] for b in batch]\n",
    "    }\n",
    "\n",
    "def create_bindingdb_loader(bindingdb_path: str, tokenizer: SMILESProteinTokenizer, batch_size: int = 16, max_samples: int = 30000) -> tuple:\n",
    "    logger.info(\"Creating BindingDB DataLoaders\")\n",
    "    bindingdb_df = load_bindingdb(bindingdb_path, max_samples=max_samples)\n",
    "    if bindingdb_df is None or len(bindingdb_df) == 0:\n",
    "        logger.warning(\"Empty BindingDB dataset\")\n",
    "        bindingdb_df = pd.DataFrame(columns=[\"SMILES\", \"Target Sequence\", \"log_kd\"])\n",
    "    train_bindingdb = bindingdb_df.sample(frac=0.8, random_state=42)\n",
    "    val_bindingdb = bindingdb_df.drop(train_bindingdb.index).sample(frac=0.5, random_state=42)\n",
    "    test_bindingdb = bindingdb_df.drop(train_bindingdb.index).drop(val_bindingdb.index)\n",
    "    log_kd_mean = train_bindingdb[\"log_kd\"].mean()\n",
    "    log_kd_std = train_bindingdb[\"log_kd\"].std()\n",
    "    if log_kd_std == 0:\n",
    "        log_kd_std = 1.0\n",
    "    logger.info(f\"Normalization parameters - log_kd_mean: {log_kd_mean:.2f}, log_kd_std: {log_kd_std:.2f}\")\n",
    "    logger.info(f\"BindingDB splits - Train: {len(train_bindingdb)}, Val: {len(val_bindingdb)}, Test: {len(test_bindingdb)}\")\n",
    "    train_dataset = DTIDataset(train_bindingdb, tokenizer, log_kd_mean, log_kd_std)\n",
    "    val_dataset = DTIDataset(val_bindingdb, tokenizer, log_kd_mean, log_kd_std)\n",
    "    test_dataset = DTIDataset(test_bindingdb, tokenizer, log_kd_mean, log_kd_std)\n",
    "    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=2, collate_fn=collate_fn) if len(train_dataset) > 0 else None\n",
    "    val_loader = DataLoader(val_dataset, batch_size=batch_size, num_workers=2, collate_fn=collate_fn) if len(val_dataset) > 0 else None\n",
    "    test_loader = DataLoader(test_dataset, batch_size=batch_size, num_workers=2, collate_fn=collate_fn) if len(test_dataset) > 0 else None\n",
    "    for dataset, name in [\n",
    "        (train_dataset, \"BindingDB Train\"),\n",
    "        (val_dataset, \"BindingDB Val\"),\n",
    "        (test_dataset, \"BindingDB Test\")\n",
    "    ]:\n",
    "        logger.info(f\"{name} failed samples: {len(dataset.failed_samples)} / {len(dataset)}\")\n",
    "    log_memory_usage()\n",
    "    return train_loader, val_loader, test_loader, log_kd_mean, log_kd_std\n",
    "\n",
    "class CrossAttention(nn.Module):\n",
    "    def __init__(self, dim: int, num_heads: int = 8):\n",
    "        super().__init__()\n",
    "        self.multihead_attn = nn.MultiheadAttention(dim, num_heads, batch_first=True)\n",
    "    def forward(self, query: torch.Tensor, key: torch.Tensor, value: torch.Tensor, key_padding_mask: torch.Tensor = None) -> torch.Tensor:\n",
    "        if key_padding_mask is not None:\n",
    "            key_padding_mask = ~key_padding_mask.bool()\n",
    "        attn_output, _ = self.multihead_attn(query, key, value, key_padding_mask=key_padding_mask)\n",
    "        return attn_output\n",
    "\n",
    "class DTIModel(pl.LightningModule):\n",
    "    def __init__(self, smiles_model_name: str = \"seyonec/PubChem10M_SMILES_BPE_450k\", \n",
    "                 protein_model_name: str = \"facebook/esm2_t12_35M_UR50D\", \n",
    "                 hidden_dim: int = 256, learning_rate: float = 1e-5, \n",
    "                 log_kd_mean: float = 0.0, log_kd_std: float = 1.0):\n",
    "        super().__init__()\n",
    "        self.save_hyperparameters() # This will save log_kd_mean and log_kd_std\n",
    "        \n",
    "        self.smiles_encoder = AutoModel.from_pretrained(smiles_model_name)\n",
    "        self.protein_encoder = AutoModel.from_pretrained(protein_model_name)\n",
    "        \n",
    "        self.smiles_dim = self.smiles_encoder.config.hidden_size\n",
    "        self.protein_dim = self.protein_encoder.config.hidden_size\n",
    "        \n",
    "        self.protein_preproj = nn.Linear(self.protein_dim, self.smiles_dim)\n",
    "        self.cross_attention = CrossAttention(self.smiles_dim, num_heads=8)\n",
    "        \n",
    "        self.smiles_proj = nn.Linear(self.smiles_dim, hidden_dim)\n",
    "        self.protein_proj = nn.Linear(self.smiles_dim, hidden_dim) # Input from cross-attention output, which is smiles_dim\n",
    "        \n",
    "        self.regression_head = nn.Sequential(\n",
    "            nn.Linear(hidden_dim * 2, hidden_dim),\n",
    "            nn.ReLU(),\n",
    "            nn.Dropout(0.2),\n",
    "            nn.Linear(hidden_dim, 1)\n",
    "        )\n",
    "        self.criterion = nn.MSELoss()\n",
    "        \n",
    "        self.test_predictions_normalized = [] # Store normalized predictions\n",
    "        self.test_targets_original = []     # Store original targets\n",
    "        self.test_smiles = []\n",
    "        self.test_proteins = []\n",
    "        \n",
    "        self.dataset_name = \"BindingDB\" # Default, can be overwritten\n",
    "        \n",
    "        # For plotting loss curves\n",
    "        self.train_losses_epoch = []\n",
    "        self.val_losses_epoch = []\n",
    "        self.epoch_indices_plot = []\n",
    "\n",
    "\n",
    "    def forward(self, smiles_input_ids, smiles_attention_mask, protein_input_ids, protein_attention_mask):\n",
    "        # Mixed precision autocast for performance if GPU is available\n",
    "        with torch.amp.autocast(device_type=self.device.type, enabled=torch.cuda.is_available() and self.device.type == 'cuda'):\n",
    "            smiles_embeds = self.smiles_encoder(input_ids=smiles_input_ids, attention_mask=smiles_attention_mask).last_hidden_state\n",
    "            protein_embeds_orig = self.protein_encoder(input_ids=protein_input_ids, attention_mask=protein_attention_mask).last_hidden_state\n",
    "            \n",
    "            protein_embeds_proj = self.protein_preproj(protein_embeds_orig) # Project protein to smiles_dim\n",
    "            \n",
    "            # Cross attention: smiles queries, protein keys/values\n",
    "            # Use protein_embeds_proj for key and value if its dim matches smiles_embeds\n",
    "            combined_embeds = self.cross_attention(query=smiles_embeds, key=protein_embeds_proj, value=protein_embeds_proj, key_padding_mask=protein_attention_mask)\n",
    "            \n",
    "            smiles_pooled = combined_embeds.mean(dim=1) \n",
    "            protein_pooled = protein_embeds_proj.mean(dim=1) # Pool the (projected) protein embeds\n",
    "\n",
    "            smiles_final_proj = self.smiles_proj(smiles_pooled)\n",
    "            protein_final_proj = self.protein_proj(protein_pooled)\n",
    "            \n",
    "            combined_features = torch.cat([smiles_final_proj, protein_final_proj], dim=-1)\n",
    "            log_kd_pred_normalized = self.regression_head(combined_features).squeeze(-1)\n",
    "            \n",
    "        return log_kd_pred_normalized # Model predicts normalized log_kd\n",
    "\n",
    "    def training_step(self, batch, batch_idx):\n",
    "        if batch is None: return None\n",
    "        batch_size = batch[\"smiles_input_ids\"].shape[0]\n",
    "        \n",
    "        log_kd_pred_normalized = self(batch[\"smiles_input_ids\"], batch[\"smiles_attention_mask\"], \n",
    "                                      batch[\"protein_input_ids\"], batch[\"protein_attention_mask\"])\n",
    "        \n",
    "        targets_normalized = batch[\"log_kd\"] # Use normalized targets for loss\n",
    "        loss = self.criterion(log_kd_pred_normalized, targets_normalized)\n",
    "        \n",
    "        self.log(\"train_loss\", loss, on_step=False, on_epoch=True, prog_bar=True, batch_size=batch_size)\n",
    "        \n",
    "        # Optional: Log MAE on original scale for monitoring\n",
    "        with torch.no_grad():\n",
    "            denormalized_pred = log_kd_pred_normalized * self.hparams.log_kd_std + self.hparams.log_kd_mean\n",
    "            original_targets = batch[\"original_log_kd\"]\n",
    "            train_mae_orig = mean_absolute_error(original_targets.cpu().numpy(), denormalized_pred.cpu().numpy())\n",
    "            self.log(\"train_mae_original\", train_mae_orig, on_step=False, on_epoch=True, prog_bar=False, batch_size=batch_size)\n",
    "            \n",
    "        return loss\n",
    "\n",
    "    def validation_step(self, batch, batch_idx):\n",
    "        if batch is None: return None\n",
    "        batch_size = batch[\"smiles_input_ids\"].shape[0]\n",
    "        \n",
    "        log_kd_pred_normalized = self(batch[\"smiles_input_ids\"], batch[\"smiles_attention_mask\"], \n",
    "                                      batch[\"protein_input_ids\"], batch[\"protein_attention_mask\"])\n",
    "        \n",
    "        targets_normalized = batch[\"log_kd\"] # Use normalized targets for loss\n",
    "        loss = self.criterion(log_kd_pred_normalized, targets_normalized)\n",
    "        \n",
    "        self.log(\"val_loss\", loss, on_step=False, on_epoch=True, prog_bar=True, batch_size=batch_size)\n",
    "\n",
    "        # Log metrics on original scale for monitoring\n",
    "        with torch.no_grad():\n",
    "            denormalized_pred = log_kd_pred_normalized * self.hparams.log_kd_std + self.hparams.log_kd_mean\n",
    "            original_targets = batch[\"original_log_kd\"].cpu().numpy()\n",
    "            denormalized_pred_cpu = denormalized_pred.cpu().numpy()\n",
    "\n",
    "            val_mae_orig = mean_absolute_error(original_targets, denormalized_pred_cpu)\n",
    "            self.log(\"val_mae_original\", val_mae_orig, on_step=False, on_epoch=True, prog_bar=False, batch_size=batch_size)\n",
    "            \n",
    "            if len(set(original_targets.flatten())) > 1 and np.var(original_targets) > 1e-6 and np.var(denormalized_pred_cpu) > 1e-6:\n",
    "                val_r2_orig = r2_score(original_targets, denormalized_pred_cpu)\n",
    "                self.log(\"val_r2_original\", val_r2_orig, on_step=False, on_epoch=True, prog_bar=False, batch_size=batch_size)\n",
    "            else:\n",
    "                self.log(\"val_r2_original\", float('nan'), on_step=False, on_epoch=True, prog_bar=False, batch_size=batch_size)\n",
    "        return loss\n",
    "\n",
    "    def on_train_epoch_end(self):\n",
    "        if self.trainer and hasattr(self.trainer, 'callback_metrics') and self.trainer.logger is not None and self.trainer.global_rank == 0:\n",
    "            self.epoch_indices_plot.append(self.current_epoch)\n",
    "            \n",
    "            train_loss = self.trainer.callback_metrics.get(\"train_loss\")\n",
    "            val_loss = self.trainer.callback_metrics.get(\"val_loss\")\n",
    "            \n",
    "            current_train_loss = float(train_loss.item()) if isinstance(train_loss, torch.Tensor) else float(train_loss) if train_loss is not None else float('nan')\n",
    "            current_val_loss = float(val_loss.item()) if isinstance(val_loss, torch.Tensor) else float(val_loss) if val_loss is not None else float('nan')\n",
    "            \n",
    "            self.train_losses_epoch.append(current_train_loss)\n",
    "            self.val_losses_epoch.append(current_val_loss)\n",
    "\n",
    "    def test_step(self, batch, batch_idx):\n",
    "        if batch is None: return None\n",
    "        batch_size = batch[\"smiles_input_ids\"].shape[0]\n",
    "\n",
    "        log_kd_pred_normalized = self(batch[\"smiles_input_ids\"], batch[\"smiles_attention_mask\"], \n",
    "                                      batch[\"protein_input_ids\"], batch[\"protein_attention_mask\"])\n",
    "        \n",
    "        targets_normalized = batch[\"log_kd\"] # For calculating test loss on normalized scale\n",
    "        loss = self.criterion(log_kd_pred_normalized, targets_normalized)\n",
    "        \n",
    "        self.test_predictions_normalized.append(log_kd_pred_normalized.cpu())\n",
    "        self.test_targets_original.append(batch[\"original_log_kd\"].cpu()) # Store original targets\n",
    "        \n",
    "        self.test_smiles.extend(batch[\"smiles\"])\n",
    "        self.test_proteins.extend(batch[\"protein\"])\n",
    "        \n",
    "        self.log(\"test_loss\", loss, on_step=False, on_epoch=True, prog_bar=True, batch_size=batch_size) # This is normalized loss\n",
    "        return loss\n",
    "\n",
    "    def on_test_epoch_end(self):\n",
    "        if not self.test_predictions_normalized or not self.test_targets_original:\n",
    "            logger.warning(\"No test predictions or targets collected in on_test_epoch_end. Skipping metric calculation.\")\n",
    "            self._clear_test_outputs()\n",
    "            return\n",
    "\n",
    "        predictions_normalized = torch.cat(self.test_predictions_normalized).numpy().flatten()\n",
    "        targets_original = torch.cat(self.test_targets_original).numpy().flatten()\n",
    "\n",
    "        # Denormalize predictions\n",
    "        predictions_denormalized = predictions_normalized * self.hparams.log_kd_std + self.hparams.log_kd_mean\n",
    "\n",
    "        # Calculate metrics using denormalized predictions and original targets\n",
    "        test_mae = mean_absolute_error(targets_original, predictions_denormalized)\n",
    "        test_rmse = np.sqrt(mean_squared_error(targets_original, predictions_denormalized))\n",
    "        \n",
    "        test_r2 = np.nan\n",
    "        if len(set(targets_original)) > 1 and np.var(targets_original) > 1e-9: # Ensure variance for R2\n",
    "             test_r2 = r2_score(targets_original, predictions_denormalized)\n",
    "        \n",
    "        test_pearson = np.nan\n",
    "        if np.var(targets_original) > 1e-6 and np.var(predictions_denormalized) > 1e-6 and len(targets_original) > 1:\n",
    "            test_pearson, _ = pearsonr(targets_original, predictions_denormalized)\n",
    "        \n",
    "        logger.info(f\"Denormalized test predictions mean: {predictions_denormalized.mean():.2f}, std: {predictions_denormalized.std():.2f}\")\n",
    "        logger.info(f\"Original test targets mean: {targets_original.mean():.2f}, std: {targets_original.std():.2f}\")\n",
    "        \n",
    "        # The 'test_loss' logged by PyTorch Lightning (from test_step) is on the normalized scale.\n",
    "        # If you want to report a final MSE on the original scale:\n",
    "        final_mse_original_scale = mean_squared_error(targets_original, predictions_denormalized)\n",
    "        logger.info(f\"Test metrics (original scale): mse_orig={final_mse_original_scale:.3f}, mae={test_mae:.3f}, rmse={test_rmse:.3f}, r2={test_r2:.5f}, pearson={test_pearson:.5f}\")\n",
    "        \n",
    "        # Log metrics to PyTorch Lightning logger (optional, but good for TensorBoard)\n",
    "        self.log(\"test_mae_original\", test_mae)\n",
    "        self.log(\"test_rmse_original\", test_rmse)\n",
    "        self.log(\"test_r2_original\", test_r2 if not np.isnan(test_r2) else 0.0) # Log 0 if NaN for PL\n",
    "        self.log(\"test_pearson_original\", test_pearson if not np.isnan(test_pearson) else 0.0)\n",
    "        self.log(\"test_mse_original\", final_mse_original_scale)\n",
    "\n",
    "        # Save denormalized predictions\n",
    "        csv_filename = f\"test_predictions_{self.dataset_name}.csv\"\n",
    "        if len(predictions_denormalized) == len(self.test_smiles) == len(self.test_proteins) == len(targets_original):\n",
    "            pd.DataFrame({\n",
    "                \"predictions\": predictions_denormalized,\n",
    "                \"targets\": targets_original,\n",
    "                \"smiles\": self.test_smiles,\n",
    "                \"proteins\": self.test_proteins\n",
    "            }).to_csv(csv_filename, index=False)\n",
    "            logger.info(f\"Test predictions saved to {csv_filename}\")\n",
    "        else:\n",
    "            logger.warning(f\"Mismatch in lengths for saving predictions: \"\n",
    "                           f\"preds={len(predictions_denormalized)}, targets={len(targets_original)}, \"\n",
    "                           f\"smiles={len(self.test_smiles)}, proteins={len(self.test_proteins)}\")\n",
    "\n",
    "        self._clear_test_outputs()\n",
    "\n",
    "    def _clear_test_outputs(self):\n",
    "        self.test_predictions_normalized = []\n",
    "        self.test_targets_original = []\n",
    "        self.test_smiles = []\n",
    "        self.test_proteins = []\n",
    "\n",
    "    def configure_optimizers(self):\n",
    "        optimizer = torch.optim.AdamW(self.parameters(), lr=self.hparams.learning_rate, weight_decay=0.01)\n",
    "        # Consider a scheduler that depends on validation loss if epochs are many\n",
    "        scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode='min', factor=0.1, patience=2, verbose=True)\n",
    "        # scheduler = torch.optim.lr_scheduler.CosineAnnealingLR(optimizer, T_max=self.trainer.max_epochs if self.trainer else 10) # T_max should be total steps or epochs\n",
    "        return {\"optimizer\": optimizer, \"lr_scheduler\": {\"scheduler\": scheduler, \"monitor\": \"val_loss\"}}\n",
    "\n",
    "class SimpleDTIDataset(Dataset):\n",
    "    def __init__(self, df, tokenizer, log_kd_mean, log_kd_std):\n",
    "        self.df = df.reset_index(drop=True)\n",
    "        self.tokenizer = tokenizer\n",
    "        self.log_kd_mean = log_kd_mean\n",
    "        self.log_kd_std = log_kd_std\n",
    "    def __len__(self):\n",
    "        return len(self.df)\n",
    "    def __getitem__(self, idx):\n",
    "        row = self.df.iloc[idx]\n",
    "        tokens = self.tokenizer.tokenize(row['SMILES'], row['Target Sequence'])\n",
    "        if tokens is None:\n",
    "            return None\n",
    "        norm_log_kd = (row['log_kd'] - self.log_kd_mean) / self.log_kd_std\n",
    "        return {\n",
    "            **tokens,\n",
    "            'log_kd': torch.tensor(norm_log_kd, dtype=torch.float32),\n",
    "            'original_log_kd': torch.tensor(row['log_kd'], dtype=torch.float32),\n",
    "            'smiles': row['SMILES'],\n",
    "            'protein': row['Target Sequence']\n",
    "        }\n",
    "    def collate_fn(batch):\n",
    "        batch = [b for b in batch if b is not None]\n",
    "        if not batch:\n",
    "            return None\n",
    "        return {\n",
    "            'smiles_input_ids': torch.stack([b['smiles_input_ids'] for b in batch]),\n",
    "            'smiles_attention_mask': torch.stack([b['smiles_attention_mask'] for b in batch]),\n",
    "            'protein_input_ids': torch.stack([b['protein_input_ids'] for b in batch]),\n",
    "            'protein_attention_mask': torch.stack([b['protein_attention_mask'] for b in batch]),\n",
    "            'log_kd': torch.stack([b['log_kd'] for b in batch]),\n",
    "            'original_log_kd': torch.stack([b['original_log_kd'] for b in batch]),\n",
    "            'smiles': [b['smiles'] for b in batch],\n",
    "            'protein': [b['protein'] for b in batch]\n",
    "        }"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b0e88f8",
   "metadata": {
    "papermill": {
     "duration": 0.020995,
     "end_time": "2025-06-03T15:30:08.579241",
     "exception": false,
     "start_time": "2025-06-03T15:30:08.558246",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#Main Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0d2d728c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-03T15:30:08.622396Z",
     "iopub.status.busy": "2025-06-03T15:30:08.621894Z",
     "iopub.status.idle": "2025-06-03T16:08:55.948305Z",
     "shell.execute_reply": "2025-06-03T16:08:55.947618Z"
    },
    "papermill": {
     "duration": 2327.34988,
     "end_time": "2025-06-03T16:08:55.949623",
     "exception": false,
     "start_time": "2025-06-03T15:30:08.599743",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:08,649 - INFO - Logging initialized\n",
      "2025-06-03 15:30:08,650 - INFO - Memory usage: 859.99 MB\n",
      "2025-06-03 15:30:08,650 - INFO - Loading Hugging Face tokenizers\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e183dc75da82441aa2cb780f119e6825",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/62.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "44210344220045408bb86d5c743359fc",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/515 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "351b2a5499a845d0bdefe191ea03c448",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json:   0%|          | 0.00/165k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "aac20057b0b44b7c853df39b6202a41d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt:   0%|          | 0.00/101k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3b8a4735aa4840b7a93cf276712cb803",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "special_tokens_map.json:   0%|          | 0.00/772 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "91334324146542e1ab4c4e707a59061d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/95.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a96fb93dd5d642b1bd0e44035946f841",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.txt:   0%|          | 0.00/93.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9aef2fac841b448db63064346c39b51c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "special_tokens_map.json:   0%|          | 0.00/125 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:13,938 - INFO - Loading and processing BindingDB data from /kaggle/input/bindingdb/BindingDB_All.tsv\n",
      "2025-06-03 15:30:15,308 - INFO - Loaded 203 samples from BindingDB.\n",
      "2025-06-03 15:30:15,308 - INFO - Loading AID datasets with target protein length: 448\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/1660260598.py:84: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  bindingdb_df_full = pd.read_csv(bindingdb_path, sep='\\t', usecols=[\"Ligand SMILES\", \"Kd (nM)\", \"BindingDB Target Chain Sequence\"], nrows=30000) # Increased rows for better sampling\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:17,107 - INFO - Loaded 30000 samples from AID 504832.\n",
      "2025-06-03 15:30:20,944 - INFO - Loaded 30000 samples from AID 504834.\n",
      "2025-06-03 15:30:21,018 - INFO - Total unique samples for fine-tuning: 56980\n",
      "2025-06-03 15:30:21,044 - INFO - Normalization params from new train_df: Mean=-5.200, Std=0.986\n",
      "2025-06-03 15:30:21,048 - INFO - DataLoaders created. Train: 45584, Val: 5698, Test: 5698\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:34.070056: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1748964634.262931      19 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1748964634.320386      19 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e9e0af400c59444f876cf6a20b019046",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "pytorch_model.bin:   0%|          | 0.00/336M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "85887807168a4bb589c1ec4ecb22688a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/778 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fbb6513fd8c4407581f20e675c11bba2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/336M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "377f751113de4016bdfd6cfec1bbe965",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/136M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of EsmModel were not initialized from the model checkpoint at facebook/esm2_t12_35M_UR50D and are newly initialized: ['pooler.dense.bias', 'pooler.dense.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 15:30:53,094 - INFO - Model loaded from checkpoint: /kaggle/input/01extra-binding-training/checkpoints/dti-model-epoch=35-val_loss=0.61.ckpt\n",
      "2025-06-03 15:30:53,099 - INFO - Using 16bit Automatic Mixed Precision (AMP)\n",
      "2025-06-03 15:30:53,136 - INFO - GPU available: True (cuda), used: True\n",
      "2025-06-03 15:30:53,138 - INFO - TPU available: False, using: 0 TPU cores\n",
      "2025-06-03 15:30:53,138 - INFO - HPU available: False, using: 0 HPUs\n",
      "2025-06-03 15:30:53,140 - INFO - Starting fine-tuning...\n",
      "2025-06-03 15:30:53,667 - INFO - LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n",
      "2025-06-03 15:30:53,735 - INFO - \n",
      "  | Name            | Type           | Params | Mode \n",
      "-----------------------------------------------------------\n",
      "0 | smiles_encoder  | RobertaModel   | 83.4 M | eval \n",
      "1 | protein_encoder | EsmModel       | 34.0 M | eval \n",
      "2 | protein_preproj | Linear         | 369 K  | train\n",
      "3 | cross_attention | CrossAttention | 2.4 M  | train\n",
      "4 | smiles_proj     | Linear         | 196 K  | train\n",
      "5 | protein_proj    | Linear         | 196 K  | train\n",
      "6 | regression_head | Sequential     | 131 K  | train\n",
      "7 | criterion       | MSELoss        | 0      | train\n",
      "-----------------------------------------------------------\n",
      "120 M     Trainable params\n",
      "0         Non-trainable params\n",
      "120 M     Total params\n",
      "482.797   Total estimated model params size (MB)\n",
      "12        Modules in train mode\n",
      "350       Modules in eval mode\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b76a947441ac41558877e9022715d6fd",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Sanity Checking: |          | 0/? [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5cc11a6a2c144f06a12ce499e0342b7c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training: |          | 0/? [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c8bb5c90d9a241eaae56fb554101c388",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Validation: |          | 0/? [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 16:06:53,752 - INFO - Monitored metric val_r2_original = nan is not finite. Previous best value was -inf. Signaling Trainer to stop.\n",
      "2025-06-03 16:07:13,473 - INFO - Fine-tuning completed.\n",
      "2025-06-03 16:07:13,862 - INFO - Loss curves plot saved to output/fine_tune_loss_plot.png\n",
      "2025-06-03 16:07:13,863 - INFO - Starting testing...\n",
      "2025-06-03 16:07:13,865 - INFO - Restoring states from the checkpoint path at /kaggle/working/output/finetune_checkpoints/finetune-dti-model-epoch=00-val_loss=0.44-val_r2_original=nan.ckpt\n",
      "2025-06-03 16:07:15,681 - INFO - LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n",
      "2025-06-03 16:07:15,929 - INFO - Loaded model weights from the checkpoint at /kaggle/working/output/finetune_checkpoints/finetune-dti-model-epoch=00-val_loss=0.44-val_r2_original=nan.ckpt\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "97d1d47433ce467f8aa2e8b8fbc34d69",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Testing: |          | 0/? [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 16:08:54,733 - INFO - Denormalized test predictions mean: -5.18, std: 0.72\n",
      "2025-06-03 16:08:54,734 - INFO - Original test targets mean: -5.20, std: 0.97\n",
      "2025-06-03 16:08:54,735 - INFO - Test metrics (original scale): mse_orig=0.434, mae=0.449, rmse=0.659, r2=0.53576, pearson=0.73223\n",
      "2025-06-03 16:08:54,834 - INFO - Test predictions saved to test_predictions_BindingDB-AID-FineTune.csv\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\">        Test metric        </span>┃<span style=\"font-weight: bold\">       DataLoader 0        </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">         test_loss         </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.4465542435646057     </span>│\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">     test_mae_original     </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.4488970637321472     </span>│\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">     test_mse_original     </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.43380433320999146    </span>│\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">   test_pearson_original   </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.7322272658348083     </span>│\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">     test_r2_original      </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.5357566475868225     </span>│\n",
       "│<span style=\"color: #008080; text-decoration-color: #008080\">    test_rmse_original     </span>│<span style=\"color: #800080; text-decoration-color: #800080\">    0.6586382389068604     </span>│\n",
       "└───────────────────────────┴───────────────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1m       Test metric       \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      DataLoader 0       \u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━┩\n",
       "│\u001b[36m \u001b[0m\u001b[36m        test_loss        \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.4465542435646057    \u001b[0m\u001b[35m \u001b[0m│\n",
       "│\u001b[36m \u001b[0m\u001b[36m    test_mae_original    \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.4488970637321472    \u001b[0m\u001b[35m \u001b[0m│\n",
       "│\u001b[36m \u001b[0m\u001b[36m    test_mse_original    \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.43380433320999146   \u001b[0m\u001b[35m \u001b[0m│\n",
       "│\u001b[36m \u001b[0m\u001b[36m  test_pearson_original  \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.7322272658348083    \u001b[0m\u001b[35m \u001b[0m│\n",
       "│\u001b[36m \u001b[0m\u001b[36m    test_r2_original     \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.5357566475868225    \u001b[0m\u001b[35m \u001b[0m│\n",
       "│\u001b[36m \u001b[0m\u001b[36m   test_rmse_original    \u001b[0m\u001b[36m \u001b[0m│\u001b[35m \u001b[0m\u001b[35m   0.6586382389068604    \u001b[0m\u001b[35m \u001b[0m│\n",
       "└───────────────────────────┴───────────────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2025-06-03 16:08:55,706 - INFO - Test results: [{'test_loss': 0.4465542435646057, 'test_mae_original': 0.4488970637321472, 'test_rmse_original': 0.6586382389068604, 'test_r2_original': 0.5357566475868225, 'test_pearson_original': 0.7322272658348083, 'test_mse_original': 0.43380433320999146}]\n",
      "2025-06-03 16:08:55,707 - INFO - Loading predictions from test_predictions_BindingDB-AID-FineTune.csv for plotting.\n",
      "2025-06-03 16:08:55,941 - INFO - Prediction vs Target plot saved to output/fine_tune_pred_vs_target.png\n",
      "2025-06-03 16:08:55,943 - INFO - Memory usage: 4079.23 MB\n",
      "2025-06-03 16:08:55,943 - INFO - Script finished.\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import sys\n",
    "import torch\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from rdkit import Chem\n",
    "# from training_model import (\n",
    "#     DTIModel, SMILESProteinTokenizer, create_bindingdb_loader, seed_everything\n",
    "# )\n",
    "from pytorch_lightning.callbacks import ModelCheckpoint, EarlyStopping\n",
    "import pytorch_lightning as pl\n",
    "\n",
    "# --- Preprocessing for AID 504832 and 504834 ---\n",
    "def substance_to_smiles(substance):\n",
    "    \"\"\"Convert 'Tested Substance' to SMILES using RDKit. Handles InChI, InChIKey, or direct SMILES.\"\"\"\n",
    "    if pd.isna(substance):\n",
    "        return None\n",
    "    s = str(substance).strip()\n",
    "    # Try as SMILES\n",
    "    mol = Chem.MolFromSmiles(s)\n",
    "    if mol:\n",
    "        return Chem.MolToSmiles(mol, canonical=True)\n",
    "    # Try as InChI\n",
    "    if s.startswith('InChI='):\n",
    "        mol = Chem.MolFromInchi(s)\n",
    "        if mol:\n",
    "            return Chem.MolToSmiles(mol, canonical=True)\n",
    "    # Try as InChIKey (cannot convert directly)\n",
    "    return None\n",
    "\n",
    "def load_aid_dataset(path, protein_sequence, max_rows=None):\n",
    "    \"\"\"Load and preprocess AID dataset, extracting SMILES and Fit_LogAC50.\"\"\"\n",
    "    df = pd.read_csv(path, sep=',', dtype=str)\n",
    "    df.columns = [c.strip() for c in df.columns]\n",
    "    # Use correct columns\n",
    "    df = df[['PUBCHEM_EXT_DATASOURCE_SMILES', 'Fit_LogAC50']].copy()\n",
    "    df = df.rename(columns={'PUBCHEM_EXT_DATASOURCE_SMILES': 'SMILES', 'Fit_LogAC50': 'log_kd'})\n",
    "    df = df.dropna(subset=['SMILES', 'log_kd'])\n",
    "    df['log_kd'] = pd.to_numeric(df['log_kd'], errors='coerce')\n",
    "    df = df.dropna(subset=['log_kd'])\n",
    "    df['Target Sequence'] = protein_sequence\n",
    "    if max_rows:\n",
    "        df = df.head(max_rows)\n",
    "    return df[['SMILES', 'Target Sequence', 'log_kd']]\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    seed_everything(42)\n",
    "    # Paths\n",
    "    checkpoint_path = \"/kaggle/input/01extra-binding-training/checkpoints/dti-model-epoch=35-val_loss=0.61.ckpt\" # Example path\n",
    "    bindingdb_path = \"/kaggle/input/bindingdb/BindingDB_All.tsv\" \n",
    "    aid_504832_path = \"/kaggle/input/punched-aid/AID_504832.csv\" \n",
    "    aid_504834_path = \"/kaggle/input/punched-aid/AID_504834.csv\" \n",
    "    \n",
    "    fine_tune_epochs = 10 # You might need more epochs\n",
    "    batch_size = 16 \n",
    "    hidden_dim = 256\n",
    "    learning_rate = 5e-6 # Start with this, might need adjustment\n",
    "\n",
    "    output_dir = \"output\"\n",
    "    os.makedirs(output_dir, exist_ok=True)\n",
    "    loss_log_path = os.path.join(output_dir, \"fine_tune_loss_log.csv\")\n",
    "    loss_plot_path = os.path.join(output_dir, \"fine_tune_loss_plot.png\")\n",
    "    # The CSV name will be generated by the model, e.g., test_predictions_BindingDB-AID504832-504834-FineTune.csv\n",
    "    # We will use this generated name for plotting.\n",
    "    pred_plot_path = os.path.join(output_dir, \"fine_tune_pred_vs_target.png\")\n",
    "\n",
    "    logger.info(\"Logging initialized\") # Moved here for clarity\n",
    "    log_memory_usage()\n",
    "\n",
    "    tokenizer = SMILESProteinTokenizer()\n",
    "\n",
    "    # --- Data Loading and Preprocessing ---\n",
    "    # Simplified BindingDB loading (as in your script)\n",
    "    logger.info(f\"Loading and processing BindingDB data from {bindingdb_path}\")\n",
    "    # ... (keep your BindingDB loading and processing code here)\n",
    "    # bindingdb_df = pd.read_csv(...) etc.\n",
    "    # Ensure it results in bindingdb_df with 'SMILES', 'Target Sequence', 'log_kd'\n",
    "    \n",
    "    # Example: (Using a placeholder if actual loading is too long for this snippet)\n",
    "    # Fallback to a tiny dummy dataset if loading fails or is too slow for testing\n",
    "    try:\n",
    "        bindingdb_df_full = pd.read_csv(bindingdb_path, sep='\\t', usecols=[\"Ligand SMILES\", \"Kd (nM)\", \"BindingDB Target Chain Sequence\"], nrows=30000) # Increased rows for better sampling\n",
    "        bindingdb_df_full = bindingdb_df_full.dropna()\n",
    "        bindingdb_df_full['SMILES_canon'] = bindingdb_df_full['Ligand SMILES'].apply(lambda s: Chem.MolToSmiles(Chem.MolFromSmiles(s), canonical=True) if Chem.MolFromSmiles(str(s)) else None)\n",
    "        bindingdb_df_full = bindingdb_df_full.dropna(subset=['SMILES_canon'])\n",
    "        bindingdb_df_full['Kd (nM)'] = pd.to_numeric(bindingdb_df_full['Kd (nM)'], errors='coerce')\n",
    "        bindingdb_df_full = bindingdb_df_full.dropna(subset=['Kd (nM)'])\n",
    "        bindingdb_df_full = bindingdb_df_full[bindingdb_df_full['Kd (nM)'].between(1e-1, 1e7)] # Adjusted Kd range slightly wider, original 0.1 to 1e6\n",
    "        bindingdb_df_full['log_kd'] = -np.log10(bindingdb_df_full['Kd (nM)'] / 1e9) # pKd\n",
    "        bindingdb_df_full = bindingdb_df_full[bindingdb_df_full['log_kd'].between(-10, 10)] # Filter pKd range\n",
    "        bindingdb_df_full = bindingdb_df_full.rename(columns={\"BindingDB Target Chain Sequence\": \"Target Sequence\", \"SMILES_canon\": \"SMILES\"})\n",
    "        bindingdb_df = bindingdb_df_full[['SMILES', 'Target Sequence', 'log_kd']]\n",
    "        if len(bindingdb_df) > 10000:\n",
    "            bindingdb_df = bindingdb_df.sample(n=10000, random_state=42)\n",
    "        logger.info(f\"Loaded {len(bindingdb_df)} samples from BindingDB.\")\n",
    "    except Exception as e:\n",
    "        logger.error(f\"Could not load main BindingDB: {e}. Using placeholder.\")\n",
    "        bindingdb_df = pd.DataFrame({ # Placeholder\n",
    "            'SMILES': ['CCO', 'CCC'], 'Target Sequence': ['MSKGEELFTGVVPILVELDGDVNGHKFSVSGEGEGDATYGKLTLKFICTTGKLPVPWPTLVTTFSYGVQCFSRYPDHMKQHDFFKSAMPEGYVQERTIFFKDDGNYKTRAEVKFEGDTLVNRIELKGIDFKEDGNILGHKLEYNYNSHNVYIMADKQKNGIKVNFKIRHNIEDGSVQLADHYQQNTPIGDGPVLLPDNHYLSTQSALSKDPNEKRDHVLLEFVTAAGITLGMDELYK', 'MSKGEELFTGVVPILVELDGDVNGHKFSVSGEGEGDATYGKLTLKFICTTGKLPVPWPTLVTTFSYGVQCFSRYPDHMKQHDFFKSAMPEGYVQERTIFFKDDGNYKTRAEVKFEGDTLVNRIELKGIDFKEDGNILGHKLEYNYNSHNVYIMADKQKNGIKVNFKIRHNIEDGSVQLADHYQQNTPIGDGPVLLPDNHYLSTQSALSKDPNEKRDHVLLEFVTAAGITLGMDELYK'],\n",
    "            'log_kd': [-5.0, -6.0]\n",
    "        })\n",
    "\n",
    "\n",
    "    malaria_protein_seq = \"MMLYISAKKAQVAFILYIVLVLRIISGNNDFCKPSSLNSEISGFIGYKCNFSNEGVHNLKPDMRERRSIFCTIHSYFIYDKIRLIIPKKSSSPEFKILPEKCFQKVYTDYENRVETDISELGLIEYEIEENDTNPNYNERTITISPFSPKDIEFFCFCDNTEKVISSIEGRSAMVHVRVLKYPHNILFTNLTNDLFTYLPKTYNESNFVSNVLEVELNDGELFVLACELINKKCFQEGKEKALYKSNKIIYHKNLTIFKAPFYVTSKDVNTECTCKFKNNNYKIVLKPKYEKKVIHGCNFSSNVSSKHTFTDSLDISLVDDSAHISCNVHLSEPKYNHLVGLNCPGDIIPDCFFQVYQPESEELEPSNIVYLDSQINIGDIEYYEDAEGDDKIKLFGIVGSIPKTTSFTCICKKDKKSAYMTVTIDSAYYGFLAKTFIFLIVAILLYI\"\n",
    "    logger.info(f\"Loading AID datasets with target protein length: {len(malaria_protein_seq)}\")\n",
    "    aid_504832_df = load_aid_dataset(aid_504832_path, malaria_protein_seq, max_rows=80000)\n",
    "    if len(aid_504832_df) > 30000: aid_504832_df = aid_504832_df.sample(n=30000, random_state=42)\n",
    "    logger.info(f\"Loaded {len(aid_504832_df)} samples from AID 504832.\")\n",
    "    \n",
    "    aid_504834_df = load_aid_dataset(aid_504834_path, malaria_protein_seq, max_rows=80000)\n",
    "    if len(aid_504834_df) > 30000: aid_504834_df = aid_504834_df.sample(n=30000, random_state=42)\n",
    "    logger.info(f\"Loaded {len(aid_504834_df)} samples from AID 504834.\")\n",
    "\n",
    "    all_df = pd.concat([bindingdb_df, aid_504832_df, aid_504834_df], ignore_index=True)\n",
    "    all_df = all_df.drop_duplicates(subset=[\"SMILES\", \"Target Sequence\"])\n",
    "    logger.info(f\"Total unique samples for fine-tuning: {len(all_df)}\")\n",
    "\n",
    "    if len(all_df) < 10: # Needs a minimum amount of data\n",
    "        logger.error(\"Insufficient data for training/testing after loading and merging. Exiting.\")\n",
    "        sys.exit(1)\n",
    "\n",
    "    # --- Single train/val/test split ---\n",
    "    # ... (Keep SimpleDTIDataset and collate_fn as defined in your original script) ...\n",
    "    # It's good practice to define them outside __main__ if they are substantial\n",
    "    all_df = all_df.sample(frac=1, random_state=42).reset_index(drop=True) # Shuffle\n",
    "    train_df = all_df.sample(frac=0.8, random_state=42)\n",
    "    testval_df = all_df.drop(train_df.index)\n",
    "    val_df = testval_df.sample(frac=0.5, random_state=42)\n",
    "    test_df = testval_df.drop(val_df.index)\n",
    "\n",
    "    if len(train_df) == 0 or len(val_df) == 0 or len(test_df) == 0:\n",
    "        logger.error(f\"Dataset split resulted in empty sets. Train: {len(train_df)}, Val: {len(val_df)}, Test: {len(test_df)}. Exiting.\")\n",
    "        sys.exit(1)\n",
    "\n",
    "    log_kd_mean = train_df['log_kd'].mean()\n",
    "    log_kd_std = train_df['log_kd'].std()\n",
    "    if log_kd_std == 0 or np.isnan(log_kd_std) : # Handle cases with single unique value or empty train_df (though checked)\n",
    "        log_kd_std = 1.0\n",
    "        logger.warning(f\"Training log_kd standard deviation was 0 or NaN. Setting to 1.0. Mean: {log_kd_mean}\")\n",
    "    logger.info(f\"Normalization params from new train_df: Mean={log_kd_mean:.3f}, Std={log_kd_std:.3f}\")\n",
    "\n",
    "\n",
    "    train_loader = DataLoader(SimpleDTIDataset(train_df, tokenizer, log_kd_mean, log_kd_std), batch_size=batch_size, shuffle=True, num_workers=2, collate_fn=collate_fn)\n",
    "    val_loader = DataLoader(SimpleDTIDataset(val_df, tokenizer, log_kd_mean, log_kd_std), batch_size=batch_size, num_workers=2, collate_fn=collate_fn)\n",
    "    test_loader = DataLoader(SimpleDTIDataset(test_df, tokenizer, log_kd_mean, log_kd_std), batch_size=batch_size, num_workers=2, collate_fn=collate_fn)\n",
    "    \n",
    "    logger.info(f\"DataLoaders created. Train: {len(train_loader.dataset)}, Val: {len(val_loader.dataset)}, Test: {len(test_loader.dataset)}\")\n",
    "\n",
    "\n",
    "    # Model, callbacks, trainer\n",
    "    try:\n",
    "        model = DTIModel.load_from_checkpoint(\n",
    "            checkpoint_path,\n",
    "            log_kd_mean=log_kd_mean, # Pass new normalization constants\n",
    "            log_kd_std=log_kd_std,\n",
    "            hidden_dim=hidden_dim,\n",
    "            learning_rate=learning_rate,\n",
    "            # Strict=False if there are minor mismatches not affecting core layers\n",
    "        )\n",
    "        logger.info(f\"Model loaded from checkpoint: {checkpoint_path}\")\n",
    "    except Exception as e:\n",
    "        logger.error(f\"Error loading model from checkpoint: {e}. Initializing a new model.\")\n",
    "        model = DTIModel(\n",
    "            log_kd_mean=log_kd_mean,\n",
    "            log_kd_std=log_kd_std,\n",
    "            hidden_dim=hidden_dim,\n",
    "            learning_rate=learning_rate\n",
    "        )\n",
    "\n",
    "\n",
    "    model.dataset_name = \"BindingDB-AID-FineTune\" # Updated name for clarity\n",
    "\n",
    "    checkpoint_callback = ModelCheckpoint(\n",
    "        dirpath=os.path.join(output_dir, \"finetune_checkpoints\"),\n",
    "        filename=\"finetune-dti-model-{epoch:02d}-{val_loss:.2f}-{val_r2_original:.2f}\",\n",
    "        monitor=\"val_r2_original\", # Monitor R2 on original scale\n",
    "        mode=\"max\", # Maximize R2\n",
    "        save_top_k=2,\n",
    "        save_last=True\n",
    "    )\n",
    "    early_stopping = EarlyStopping(monitor=\"val_r2_original\", patience=5, mode=\"max\", verbose=True) # Increased patience\n",
    "\n",
    "    trainer = pl.Trainer(\n",
    "        max_epochs=fine_tune_epochs,\n",
    "        accelerator=\"gpu\" if torch.cuda.is_available() else \"cpu\",\n",
    "        devices=1,\n",
    "        callbacks=[checkpoint_callback, early_stopping],\n",
    "        logger=pl.loggers.TensorBoardLogger(os.path.join(output_dir, \"finetune_logs\"), name=\"dti_finetune\"),\n",
    "        precision=\"16-mixed\" if torch.cuda.is_available() else 32, # 16-mixed only on GPU\n",
    "        # gradient_clip_val=0.5 # Optional: gradient clipping\n",
    "    )\n",
    "\n",
    "    if train_loader is not None and val_loader is not None:\n",
    "        logger.info(\"Starting fine-tuning...\")\n",
    "        trainer.fit(model, train_loader, val_loader)\n",
    "        logger.info(\"Fine-tuning completed.\")\n",
    "\n",
    "        # Plotting loss curves\n",
    "        min_len = min(len(model.epoch_indices_plot), len(model.train_losses_epoch), len(model.val_losses_epoch))\n",
    "        if min_len > 0:\n",
    "            loss_df = pd.DataFrame({\n",
    "                \"epoch\": model.epoch_indices_plot[:min_len],\n",
    "                \"train_loss_norm\": model.train_losses_epoch[:min_len], # Normalized loss\n",
    "                \"val_loss_norm\": model.val_losses_epoch[:min_len]    # Normalized loss\n",
    "            })\n",
    "            loss_df.to_csv(loss_log_path, index=False)\n",
    "            \n",
    "            plt.figure(figsize=(10,6))\n",
    "            plt.plot(loss_df[\"epoch\"], loss_df[\"train_loss_norm\"], label=\"Train Loss (Normalized)\")\n",
    "            plt.plot(loss_df[\"epoch\"], loss_df[\"val_loss_norm\"], label=\"Val Loss (Normalized)\")\n",
    "            plt.xlabel(\"Epoch\")\n",
    "            plt.ylabel(\"Loss (Normalized Scale)\")\n",
    "            plt.title(\"Fine-tuning Loss Curves Over Epochs\")\n",
    "            plt.legend()\n",
    "            plt.tight_layout()\n",
    "            plt.savefig(loss_plot_path)\n",
    "            plt.close()\n",
    "            logger.info(f\"Loss curves plot saved to {loss_plot_path}\")\n",
    "        else:\n",
    "            logger.warning(\"No training/validation loss data collected for plotting.\")\n",
    "\n",
    "    # Test and save predictions\n",
    "    logger.info(\"Starting testing...\")\n",
    "    # The model's internal test_predictions and test_targets are cleared by on_test_epoch_end.\n",
    "    # CSV is saved within on_test_epoch_end.\n",
    "    if test_loader is not None:\n",
    "         # trainer.test will call model.on_test_epoch_end which saves the CSV\n",
    "        test_results = trainer.test(model, test_loader, ckpt_path='best' if checkpoint_callback.best_model_path else None) \n",
    "        logger.info(f\"Test results: {test_results}\")\n",
    "\n",
    "        # Plot predictions vs targets from the CSV saved by on_test_epoch_end\n",
    "        pred_csv_generated_path = os.path.join(f\"test_predictions_{model.dataset_name}.csv\") # Default naming from model\n",
    "        \n",
    "        # Check if the specific best checkpoint path was used, or if a file was created by test step\n",
    "        # For robustness, check the default name if specific path doesn't exist or not set\n",
    "        if not os.path.exists(pred_csv_generated_path) and checkpoint_callback.best_model_path:\n",
    "             # If test was run on best checkpoint, the dataset name might be from when model was initialized\n",
    "             # Let's stick to the generated path with current model.dataset_name\n",
    "             pass\n",
    "\n",
    "\n",
    "        if os.path.exists(pred_csv_generated_path):\n",
    "            logger.info(f\"Loading predictions from {pred_csv_generated_path} for plotting.\")\n",
    "            pred_df = pd.read_csv(pred_csv_generated_path)\n",
    "            targets = pred_df[\"targets\"].values\n",
    "            predictions = pred_df[\"predictions\"].values\n",
    "\n",
    "            plt.figure(figsize=(7,7))\n",
    "            plt.scatter(targets, predictions, alpha=0.3)\n",
    "            plt.xlabel(\"Target log_kd (Original Scale)\")\n",
    "            plt.ylabel(\"Predicted log_kd (Original Scale)\")\n",
    "            plt.title(f\"Fine-tuned Model ({model.dataset_name}): Prediction vs. Target\")\n",
    "            min_val = min(targets.min(), predictions.min()) if len(targets) > 0 and len(predictions) > 0 else 0\n",
    "            max_val = max(targets.max(), predictions.max()) if len(targets) > 0 and len(predictions) > 0 else 1\n",
    "            plt.plot([min_val, max_val], [min_val, max_val], 'r--', lw=2)\n",
    "            plt.tight_layout()\n",
    "            plt.savefig(pred_plot_path) # Use the predefined pred_plot_path\n",
    "            plt.close()\n",
    "            logger.info(f\"Prediction vs Target plot saved to {pred_plot_path}\")\n",
    "        else:\n",
    "            logger.warning(f\"Prediction CSV file not found at {pred_csv_generated_path}. Skipping scatter plot.\")\n",
    "    else:\n",
    "        logger.warning(\"Test loader is None. Skipping testing phase.\")\n",
    "    \n",
    "    log_memory_usage()\n",
    "    logger.info(\"Script finished.\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 7348383,
     "sourceId": 11707627,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7576939,
     "sourceId": 12041030,
     "sourceType": "datasetVersion"
    },
    {
     "sourceId": 243240200,
     "sourceType": "kernelVersion"
    },
    {
     "sourceId": 243299546,
     "sourceType": "kernelVersion"
    }
   ],
   "dockerImageVersionId": 31041,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2433.350976,
   "end_time": "2025-06-03T16:08:59.772873",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-03T15:28:26.421897",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0328aa88601e4738ab8bbe9b673c4838": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "06eddf8939044d0d9a6aa734d970a475": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "084a430ebf1645d8a97255b1a3e552ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "08ac1b70894041ccb44ef660448c1df5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0958acc1cdc0493abf54ab79ba547d72": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "09c3a6e01886406d977aa549864a13b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "0a82b2822bc14b18b550f508ce90b2bb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0e685f1397f24ad79d4827da83ea8527": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0f22910a51734e718da93f6393f06b2d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "10772e6cda6947799ae84007f21250ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0e685f1397f24ad79d4827da83ea8527",
       "placeholder": "​",
       "style": "IPY_MODEL_bd160b1a47094abbb95c0a4f60e41c75",
       "tabbable": null,
       "tooltip": null,
       "value": " 772/772 [00:00&lt;00:00, 108kB/s]"
      }
     },
     "1138f6102879406eb2db7fb7e3b0916b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0f22910a51734e718da93f6393f06b2d",
       "placeholder": "​",
       "style": "IPY_MODEL_cdd92c921dcc4593acc2103ea7534cde",
       "tabbable": null,
       "tooltip": null,
       "value": "Epoch 0: 100%"
      }
     },
     "145b635153ed4afcac5c3a300fac3dbb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "14ad3646849c4a5d8ecdca42a4c36098": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "186a2e53e48c4f9c9266e7dc2fa6f169": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1bae27515fc648718d41d2b805a0f799": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1c5c63d7d12a450cabd5762de4e9436d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_90a81c3a22714476a6776c1fc9be84b3",
       "placeholder": "​",
       "style": "IPY_MODEL_ca0d015607d046979ec848fd825bcc63",
       "tabbable": null,
       "tooltip": null,
       "value": " 336M/336M [00:00&lt;00:00, 348MB/s]"
      }
     },
     "203baa9a03bb4c27a886948145c512f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_616e20044d364026a23a2e71cb3d0244",
       "placeholder": "​",
       "style": "IPY_MODEL_45d514f1de32479ebfa33285eb13ad3a",
       "tabbable": null,
       "tooltip": null,
       "value": "Validation DataLoader 0: 100%"
      }
     },
     "222f70efec734e05bb6f1ab3400b6287": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "232718f56bd44d78988a5a6a8be885e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "23e7c6fcdc934cb0bbc409bee6507488": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2444bdb2a9a04ad6a55f543fe1be12ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2c68093ae64d4fa99028579586d5a227": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "313f06eef6824161b96eabe98530d4df": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "31ca8d8c41c44927a648f6228dd0e81d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fccab7518f3e4d968648dedbe17b1922",
       "max": 164540.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d14bfb3d380c4a789b4f5ca39524ea43",
       "tabbable": null,
       "tooltip": null,
       "value": 164540.0
      }
     },
     "31f6597882af4c748313337ed45e9a22": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "33b68ef161d5448895cf61360c69d88e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7d89c5505ef1439ea78dffb04844464f",
       "placeholder": "​",
       "style": "IPY_MODEL_409fe550140449afa4e035043183b4e9",
       "tabbable": null,
       "tooltip": null,
       "value": "merges.txt: 100%"
      }
     },
     "342542571ffc41359e3ee15e333005ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0958acc1cdc0493abf54ab79ba547d72",
       "placeholder": "​",
       "style": "IPY_MODEL_ff27026018e04861babd787e712744ed",
       "tabbable": null,
       "tooltip": null,
       "value": " 93.0/93.0 [00:00&lt;00:00, 7.80kB/s]"
      }
     },
     "34c0a92c41994f5f92661638517e9d3e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "351b2a5499a845d0bdefe191ea03c448": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c72798bd5bd3496a9b9ffbe95d5f1b44",
        "IPY_MODEL_31ca8d8c41c44927a648f6228dd0e81d",
        "IPY_MODEL_86143902800d4bf3a4717f3378693c8c"
       ],
       "layout": "IPY_MODEL_b044fe9b48fe44ba82a9b724d2764ec5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "35d2b00affb94baf894006537bff5e39": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "35f143b368ea42bd8b0452567ff8b9d5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "377f751113de4016bdfd6cfec1bbe965": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e54dd883b09b4e81a8252df46ebea5e3",
        "IPY_MODEL_c854a45727c148d1999104311e37559c",
        "IPY_MODEL_78cabb0452644e8baab4930c1985c21f"
       ],
       "layout": "IPY_MODEL_546b92a5483446eeacd500d6a09071ec",
       "tabbable": null,
       "tooltip": null
      }
     },
     "37e15d5bf4524133bb7cd960466d31d2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3833e19fe5374c08850df0825b1fea60": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_90c52bcaaa5c4c27b1098cdf0bb84513",
       "placeholder": "​",
       "style": "IPY_MODEL_9c7dbbb23dfb4e97b2fa684ff316e851",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "3a43020c2b1846f09374224b49d1ef14": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3aa688b45f644479924c650a7f08ece0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3af5ddb99d384591b8a8814aac65dfd7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3b8a4735aa4840b7a93cf276712cb803": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e4fdcac5e6e14f989f01c3202711aef3",
        "IPY_MODEL_c5a93da716bf4a5ab939c70db2e22d6c",
        "IPY_MODEL_10772e6cda6947799ae84007f21250ff"
       ],
       "layout": "IPY_MODEL_96f650177fa74d649cc550f284d6f126",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3ed1c2a5f5704f3aba0be13e52c79e7c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3f767fa3d6e7427e81f28ffe2600f0e3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_65c0cec1cf1c4fc8a739ba7e05965afd",
       "placeholder": "​",
       "style": "IPY_MODEL_6406c2073760445ab47e776baf249d18",
       "tabbable": null,
       "tooltip": null,
       "value": " 778/778 [00:00&lt;00:00, 96.7kB/s]"
      }
     },
     "402922adbf0547b898092b0643cd3a10": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_85feef4c46d14a6b9ef3ced567d3cdeb",
       "placeholder": "​",
       "style": "IPY_MODEL_14ad3646849c4a5d8ecdca42a4c36098",
       "tabbable": null,
       "tooltip": null,
       "value": " 515/515 [00:00&lt;00:00, 66.1kB/s]"
      }
     },
     "409fe550140449afa4e035043183b4e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "41e77cdccac247d79d6a244b7f6d2c41": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_62960efa51824327af29ab4f76194f6f",
       "max": 2.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d124424baa304942b8495c9544f42c43",
       "tabbable": null,
       "tooltip": null,
       "value": 2.0
      }
     },
     "44210344220045408bb86d5c743359fc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a5317f429c1942469cf083e8fdaa814a",
        "IPY_MODEL_7ede902315f44c1d965376144a098364",
        "IPY_MODEL_402922adbf0547b898092b0643cd3a10"
       ],
       "layout": "IPY_MODEL_8cf384a502bc40de84ac46da7af2b329",
       "tabbable": null,
       "tooltip": null
      }
     },
     "45d514f1de32479ebfa33285eb13ad3a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4804cf605ee14923b96e451e3627b161": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dc3fc683e5e749b28b61cf36f885b16e",
       "placeholder": "​",
       "style": "IPY_MODEL_d1437b7d6ea34d408334f17e5d966184",
       "tabbable": null,
       "tooltip": null,
       "value": " 2/2 [00:01&lt;00:00,  1.57it/s]"
      }
     },
     "4a31fc8c93574e44aaaf4dcceb39734a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a265bbb52cae42d899886dc149bbb67a",
       "placeholder": "​",
       "style": "IPY_MODEL_7d768a0ac5b447f48a4a30981cb39b0a",
       "tabbable": null,
       "tooltip": null,
       "value": " 2849/2849 [36:16&lt;00:00,  1.31it/s, v_num=0, val_loss=0.441, train_loss=0.808]"
      }
     },
     "4adbfe9b4ed04a8ba56a5786d1fa7741": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bad8cb9a054c4b92b730ae00c62b5a91",
       "placeholder": "​",
       "style": "IPY_MODEL_222f70efec734e05bb6f1ab3400b6287",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.txt: 100%"
      }
     },
     "5046431a86354faba5c3ebd75753517a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "50d928e5e92549a5bf0bb1e8e35d7766": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "50ebc9cbfd8f4a888d05d75b37d9277f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "50f679fbdeeb477c860251ef849b49e0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "546b92a5483446eeacd500d6a09071ec": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5815aca3648b4eeb8199f7256a7f4f5c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5ac661277c1c4f01bedb44201fea54ef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5b9f426a450a4ba1903aadb35d745012": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5c95b58c4acb45ca976a1fd0e0231833": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5815aca3648b4eeb8199f7256a7f4f5c",
       "placeholder": "​",
       "style": "IPY_MODEL_975ac8e7137840859aefdf16f422b0ea",
       "tabbable": null,
       "tooltip": null,
       "value": " 125/125 [00:00&lt;00:00, 15.9kB/s]"
      }
     },
     "5cc11a6a2c144f06a12ce499e0342b7c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1138f6102879406eb2db7fb7e3b0916b",
        "IPY_MODEL_969d6bb8f02a4e93a6bac0b09e6e257f",
        "IPY_MODEL_4a31fc8c93574e44aaaf4dcceb39734a"
       ],
       "layout": "IPY_MODEL_09c3a6e01886406d977aa549864a13b6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5fac7df283664dcfb8f9e1128154ec7e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "616e20044d364026a23a2e71cb3d0244": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "62960efa51824327af29ab4f76194f6f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6406c2073760445ab47e776baf249d18": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "64deb89631824acb997cba714747604a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "65c0cec1cf1c4fc8a739ba7e05965afd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "669501ae783049fc9fa6b987839916a5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": "100%"
      }
     },
     "699dc82523254219b417dac212acc958": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6ff03f7068fe40559410b39f70647e1a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_730b3d24d95e4734bb7587186fb2d80a",
       "placeholder": "​",
       "style": "IPY_MODEL_0a82b2822bc14b18b550f508ce90b2bb",
       "tabbable": null,
       "tooltip": null,
       "value": "Sanity Checking DataLoader 0: 100%"
      }
     },
     "70a5e2c26d71472b8e7e6c4264be690e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5046431a86354faba5c3ebd75753517a",
       "placeholder": "​",
       "style": "IPY_MODEL_145b635153ed4afcac5c3a300fac3dbb",
       "tabbable": null,
       "tooltip": null,
       "value": "pytorch_model.bin: 100%"
      }
     },
     "716e3cdf64df4ec3b22a50d7c2c13e77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_232718f56bd44d78988a5a6a8be885e8",
       "max": 357.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_23e7c6fcdc934cb0bbc409bee6507488",
       "tabbable": null,
       "tooltip": null,
       "value": 357.0
      }
     },
     "717238f3adb94feba160fdf4ac27e41b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "730b3d24d95e4734bb7587186fb2d80a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7372155aa5b64b64b1f6ac51ca3cde6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3af5ddb99d384591b8a8814aac65dfd7",
       "placeholder": "​",
       "style": "IPY_MODEL_c89e484440ec4697806b077ce129bcb5",
       "tabbable": null,
       "tooltip": null,
       "value": "Testing DataLoader 0: 100%"
      }
     },
     "74430b354b994762bd0cecb65a2caa3e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e23e401d015046868d9bc3700492b306",
       "max": 336422980.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d27429627b4d4e96a3c9c95ec416b150",
       "tabbable": null,
       "tooltip": null,
       "value": 336422980.0
      }
     },
     "7830c094b00549b3bdbabe03691e208e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "78cabb0452644e8baab4930c1985c21f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_717238f3adb94feba160fdf4ac27e41b",
       "placeholder": "​",
       "style": "IPY_MODEL_37e15d5bf4524133bb7cd960466d31d2",
       "tabbable": null,
       "tooltip": null,
       "value": " 136M/136M [00:03&lt;00:00, 24.6MB/s]"
      }
     },
     "7b1752b7ac0947c8bad6e68bbf43d9c7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7b83c6b8497d41f68892e2038aa07c48": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7d768a0ac5b447f48a4a30981cb39b0a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7d89c5505ef1439ea78dffb04844464f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7ede902315f44c1d965376144a098364": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a00ca7877802484db1f3459f8c73be8f",
       "max": 515.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3a43020c2b1846f09374224b49d1ef14",
       "tabbable": null,
       "tooltip": null,
       "value": 515.0
      }
     },
     "81462bc3d8744ea38c580187a3ab92b5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_34c0a92c41994f5f92661638517e9d3e",
       "max": 125.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3ed1c2a5f5704f3aba0be13e52c79e7c",
       "tabbable": null,
       "tooltip": null,
       "value": 125.0
      }
     },
     "849d9a337e33497f8c774571b63596e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_903a50288b9f4f5ca7540c4a837cb921",
       "max": 336390872.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2444bdb2a9a04ad6a55f543fe1be12ad",
       "tabbable": null,
       "tooltip": null,
       "value": 336390872.0
      }
     },
     "85887807168a4bb589c1ec4ecb22688a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e669533b4ba24d40885a72ffa7e092b3",
        "IPY_MODEL_a9ce8b75c2524de7ae5588eb6456a009",
        "IPY_MODEL_3f767fa3d6e7427e81f28ffe2600f0e3"
       ],
       "layout": "IPY_MODEL_7b83c6b8497d41f68892e2038aa07c48",
       "tabbable": null,
       "tooltip": null
      }
     },
     "85feef4c46d14a6b9ef3ced567d3cdeb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "86143902800d4bf3a4717f3378693c8c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a0fa868348404ccfb72194c1ef8f1d82",
       "placeholder": "​",
       "style": "IPY_MODEL_31f6597882af4c748313337ed45e9a22",
       "tabbable": null,
       "tooltip": null,
       "value": " 165k/165k [00:00&lt;00:00, 8.49MB/s]"
      }
     },
     "8c2d6fcbd4034838901926d2c95e648c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8cf384a502bc40de84ac46da7af2b329": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8dc4d354b7fa43d38014180d4949a7d7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_08ac1b70894041ccb44ef660448c1df5",
       "placeholder": "​",
       "style": "IPY_MODEL_9e4d093a8d30400985b3646516fa0a2c",
       "tabbable": null,
       "tooltip": null,
       "value": " 336M/336M [00:01&lt;00:00, 335MB/s]"
      }
     },
     "90183bbd71f14e1cb070b90ee76e840e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "903a50288b9f4f5ca7540c4a837cb921": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "90a81c3a22714476a6776c1fc9be84b3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "90a838edaf8748a39b1a33e208bfe2cc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "90b64ba00b414830ad99fc1b2291cfce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "90c52bcaaa5c4c27b1098cdf0bb84513": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "91334324146542e1ab4c4e707a59061d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_944036f189c34c5bb9295f029c01b1ae",
        "IPY_MODEL_f568f0c05ead4200be7dfd88715e1adb",
        "IPY_MODEL_f63c1f49e4114fba89d4c56a95bf634e"
       ],
       "layout": "IPY_MODEL_f85cb372467b428aa57345e299b3f98c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "92430a7b4cd14f60a25fea03a549f06b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9f8907818cc34e7a95c088aaa49ab8fe",
       "max": 93.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5b9f426a450a4ba1903aadb35d745012",
       "tabbable": null,
       "tooltip": null,
       "value": 93.0
      }
     },
     "9427cbef3f434d51984d330eecdb063b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_95bb2fd44b5142a8867f4278bf1ac188",
       "placeholder": "​",
       "style": "IPY_MODEL_c7424ab241c64e49b8cec589993a3889",
       "tabbable": null,
       "tooltip": null,
       "value": " 357/357 [01:38&lt;00:00,  3.61it/s]"
      }
     },
     "944036f189c34c5bb9295f029c01b1ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_90a838edaf8748a39b1a33e208bfe2cc",
       "placeholder": "​",
       "style": "IPY_MODEL_b2c09f4add4a4a0d9b20a1585d1a79eb",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "95995482730846b8a1f8832abbb1806b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a258f6f2fcac4f71866c2a674e8c60d0",
       "placeholder": "​",
       "style": "IPY_MODEL_313f06eef6824161b96eabe98530d4df",
       "tabbable": null,
       "tooltip": null,
       "value": " 101k/101k [00:00&lt;00:00, 10.3MB/s]"
      }
     },
     "95bb2fd44b5142a8867f4278bf1ac188": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "969d6bb8f02a4e93a6bac0b09e6e257f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7b1752b7ac0947c8bad6e68bbf43d9c7",
       "max": 2849.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2c68093ae64d4fa99028579586d5a227",
       "tabbable": null,
       "tooltip": null,
       "value": 2849.0
      }
     },
     "96f650177fa74d649cc550f284d6f126": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "975ac8e7137840859aefdf16f422b0ea": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "97d1d47433ce467f8aa2e8b8fbc34d69": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7372155aa5b64b64b1f6ac51ca3cde6c",
        "IPY_MODEL_c326d7d1102a4fd794382d93ce433c0f",
        "IPY_MODEL_b30ae93b03dd49bd9c172628c5fd7d3d"
       ],
       "layout": "IPY_MODEL_d04d4339e9254329a3a4d7f3a0fd66b0",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9aef2fac841b448db63064346c39b51c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a86f6382038e4d85bb01da80082b0a34",
        "IPY_MODEL_81462bc3d8744ea38c580187a3ab92b5",
        "IPY_MODEL_5c95b58c4acb45ca976a1fd0e0231833"
       ],
       "layout": "IPY_MODEL_7830c094b00549b3bdbabe03691e208e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9c7dbbb23dfb4e97b2fa684ff316e851": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9d50b76003124e19920d5a7864a87dfa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9e4d093a8d30400985b3646516fa0a2c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9f8907818cc34e7a95c088aaa49ab8fe": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a00ca7877802484db1f3459f8c73be8f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a0fa868348404ccfb72194c1ef8f1d82": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a258f6f2fcac4f71866c2a674e8c60d0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a265bbb52cae42d899886dc149bbb67a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a5317f429c1942469cf083e8fdaa814a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8c2d6fcbd4034838901926d2c95e648c",
       "placeholder": "​",
       "style": "IPY_MODEL_bb7300e83909483eafcfbee44bf936c7",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "a58a0123b6c3456aa7c31483bf276742": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a66c1fd9afd245e48b9c9c050489ec99": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a86f6382038e4d85bb01da80082b0a34": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_06eddf8939044d0d9a6aa734d970a475",
       "placeholder": "​",
       "style": "IPY_MODEL_90b64ba00b414830ad99fc1b2291cfce",
       "tabbable": null,
       "tooltip": null,
       "value": "special_tokens_map.json: 100%"
      }
     },
     "a96fb93dd5d642b1bd0e44035946f841": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4adbfe9b4ed04a8ba56a5786d1fa7741",
        "IPY_MODEL_92430a7b4cd14f60a25fea03a549f06b",
        "IPY_MODEL_342542571ffc41359e3ee15e333005ee"
       ],
       "layout": "IPY_MODEL_a66c1fd9afd245e48b9c9c050489ec99",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a9ce8b75c2524de7ae5588eb6456a009": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f4b433dc73c34a60a9c639a7738aea31",
       "max": 778.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f6d53bcde6804fc5bd161a2546a17cb3",
       "tabbable": null,
       "tooltip": null,
       "value": 778.0
      }
     },
     "aac20057b0b44b7c853df39b6202a41d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_33b68ef161d5448895cf61360c69d88e",
        "IPY_MODEL_e0fbd6c4e04848a7a0cfb33ede052cb9",
        "IPY_MODEL_95995482730846b8a1f8832abbb1806b"
       ],
       "layout": "IPY_MODEL_90183bbd71f14e1cb070b90ee76e840e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b044fe9b48fe44ba82a9b724d2764ec5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b2c09f4add4a4a0d9b20a1585d1a79eb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b30ae93b03dd49bd9c172628c5fd7d3d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_699dc82523254219b417dac212acc958",
       "placeholder": "​",
       "style": "IPY_MODEL_5ac661277c1c4f01bedb44201fea54ef",
       "tabbable": null,
       "tooltip": null,
       "value": " 357/357 [01:38&lt;00:00,  3.62it/s]"
      }
     },
     "b49116d48777492fbd3d282c7f466357": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b76a947441ac41558877e9022715d6fd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6ff03f7068fe40559410b39f70647e1a",
        "IPY_MODEL_41e77cdccac247d79d6a244b7f6d2c41",
        "IPY_MODEL_4804cf605ee14923b96e451e3627b161"
       ],
       "layout": "IPY_MODEL_e0dec451c75740b187227732dffc8b32",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bad8cb9a054c4b92b730ae00c62b5a91": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bb7300e83909483eafcfbee44bf936c7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bd160b1a47094abbb95c0a4f60e41c75": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bd555990207e49f7b5d660256f15c3b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_35f143b368ea42bd8b0452567ff8b9d5",
       "placeholder": "​",
       "style": "IPY_MODEL_1bae27515fc648718d41d2b805a0f799",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "be0c996c4b5f4f74be8c55370f3caa9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c13af205caa1483aaef3e3ae8255d880": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c326d7d1102a4fd794382d93ce433c0f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_64deb89631824acb997cba714747604a",
       "max": 357.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_be0c996c4b5f4f74be8c55370f3caa9f",
       "tabbable": null,
       "tooltip": null,
       "value": 357.0
      }
     },
     "c3b3c12f866a4f7489711d8827d0ab4a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c44395e4b6f94e319b3aa5ad88c66e5a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c5a93da716bf4a5ab939c70db2e22d6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_50d928e5e92549a5bf0bb1e8e35d7766",
       "max": 772.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c44395e4b6f94e319b3aa5ad88c66e5a",
       "tabbable": null,
       "tooltip": null,
       "value": 772.0
      }
     },
     "c72798bd5bd3496a9b9ffbe95d5f1b44": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_084a430ebf1645d8a97255b1a3e552ce",
       "placeholder": "​",
       "style": "IPY_MODEL_3aa688b45f644479924c650a7f08ece0",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: 100%"
      }
     },
     "c7424ab241c64e49b8cec589993a3889": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c854a45727c148d1999104311e37559c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c13af205caa1483aaef3e3ae8255d880",
       "max": 136008798.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_186a2e53e48c4f9c9266e7dc2fa6f169",
       "tabbable": null,
       "tooltip": null,
       "value": 136008798.0
      }
     },
     "c89e484440ec4697806b077ce129bcb5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c8bb5c90d9a241eaae56fb554101c388": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_203baa9a03bb4c27a886948145c512f4",
        "IPY_MODEL_716e3cdf64df4ec3b22a50d7c2c13e77",
        "IPY_MODEL_9427cbef3f434d51984d330eecdb063b"
       ],
       "layout": "IPY_MODEL_669501ae783049fc9fa6b987839916a5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c957df0402f34c4bb5c509e66a50d001": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e572e7886d3d48c8bdd787347bf89285",
       "max": 62.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d60a5719ad504a0d8f1dfcafcd286671",
       "tabbable": null,
       "tooltip": null,
       "value": 62.0
      }
     },
     "ca0d015607d046979ec848fd825bcc63": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cac6b26d96ab4b40928c43c5941cde4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cdd92c921dcc4593acc2103ea7534cde": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d04d4339e9254329a3a4d7f3a0fd66b0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "d124424baa304942b8495c9544f42c43": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d1437b7d6ea34d408334f17e5d966184": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d14bfb3d380c4a789b4f5ca39524ea43": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d27429627b4d4e96a3c9c95ec416b150": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d42842f31cc14f909da65c099dd3ffae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d60a5719ad504a0d8f1dfcafcd286671": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d9defbd236924f31b6b42dc4ddf10bc8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c3b3c12f866a4f7489711d8827d0ab4a",
       "placeholder": "​",
       "style": "IPY_MODEL_cac6b26d96ab4b40928c43c5941cde4e",
       "tabbable": null,
       "tooltip": null,
       "value": " 62.0/62.0 [00:00&lt;00:00, 6.47kB/s]"
      }
     },
     "dc3fc683e5e749b28b61cf36f885b16e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dff27d10ddf34ce4ae007ae242ffb6f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e0dec451c75740b187227732dffc8b32": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": "100%"
      }
     },
     "e0fbd6c4e04848a7a0cfb33ede052cb9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5fac7df283664dcfb8f9e1128154ec7e",
       "max": 101307.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f3f2cf1933b0497fa2674632f3f81e4f",
       "tabbable": null,
       "tooltip": null,
       "value": 101307.0
      }
     },
     "e183dc75da82441aa2cb780f119e6825": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3833e19fe5374c08850df0825b1fea60",
        "IPY_MODEL_c957df0402f34c4bb5c509e66a50d001",
        "IPY_MODEL_d9defbd236924f31b6b42dc4ddf10bc8"
       ],
       "layout": "IPY_MODEL_35d2b00affb94baf894006537bff5e39",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e23e401d015046868d9bc3700492b306": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e4fdcac5e6e14f989f01c3202711aef3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_50ebc9cbfd8f4a888d05d75b37d9277f",
       "placeholder": "​",
       "style": "IPY_MODEL_d42842f31cc14f909da65c099dd3ffae",
       "tabbable": null,
       "tooltip": null,
       "value": "special_tokens_map.json: 100%"
      }
     },
     "e54dd883b09b4e81a8252df46ebea5e3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ebbac0455ded4d538303b56b5ec8ea18",
       "placeholder": "​",
       "style": "IPY_MODEL_a58a0123b6c3456aa7c31483bf276742",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "e572e7886d3d48c8bdd787347bf89285": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e669533b4ba24d40885a72ffa7e092b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0328aa88601e4738ab8bbe9b673c4838",
       "placeholder": "​",
       "style": "IPY_MODEL_b49116d48777492fbd3d282c7f466357",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "e9e0af400c59444f876cf6a20b019046": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_70a5e2c26d71472b8e7e6c4264be690e",
        "IPY_MODEL_74430b354b994762bd0cecb65a2caa3e",
        "IPY_MODEL_8dc4d354b7fa43d38014180d4949a7d7"
       ],
       "layout": "IPY_MODEL_9d50b76003124e19920d5a7864a87dfa",
       "tabbable": null,
       "tooltip": null
      }
     },
     "ebbac0455ded4d538303b56b5ec8ea18": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eed9d2a9f2fb40959f0d8c6c099ce00a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f3f2cf1933b0497fa2674632f3f81e4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f4b433dc73c34a60a9c639a7738aea31": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f568f0c05ead4200be7dfd88715e1adb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dff27d10ddf34ce4ae007ae242ffb6f8",
       "max": 95.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f8210bdc3a2c448e9fbdd33475d9c6b7",
       "tabbable": null,
       "tooltip": null,
       "value": 95.0
      }
     },
     "f63c1f49e4114fba89d4c56a95bf634e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f7ac147f3435480e984ff11fe92f7758",
       "placeholder": "​",
       "style": "IPY_MODEL_50f679fbdeeb477c860251ef849b49e0",
       "tabbable": null,
       "tooltip": null,
       "value": " 95.0/95.0 [00:00&lt;00:00, 11.7kB/s]"
      }
     },
     "f6d53bcde6804fc5bd161a2546a17cb3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f7ac147f3435480e984ff11fe92f7758": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f8210bdc3a2c448e9fbdd33475d9c6b7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f85cb372467b428aa57345e299b3f98c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fbb6513fd8c4407581f20e675c11bba2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bd555990207e49f7b5d660256f15c3b1",
        "IPY_MODEL_849d9a337e33497f8c774571b63596e2",
        "IPY_MODEL_1c5c63d7d12a450cabd5762de4e9436d"
       ],
       "layout": "IPY_MODEL_eed9d2a9f2fb40959f0d8c6c099ce00a",
       "tabbable": null,
       "tooltip": null
      }
     },
     "fccab7518f3e4d968648dedbe17b1922": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ff27026018e04861babd787e712744ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
